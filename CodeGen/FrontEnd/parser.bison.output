State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: %empty
    2      | globaldeclarations

    3 literal: NUMBER
    4        | STRING_Y
    5        | TRUE
    6        | FALSE

    7 type: BOOLEAN
    8     | INT

    9 globaldeclarations: globaldeclaration
   10                   | globaldeclarations globaldeclaration

   11 globaldeclaration: variabledeclaration
   12                  | functiondeclaration
   13                  | mainfunctiondeclaration

   14 variabledeclaration: type identifier ';'

   15 identifier: ID

   16 functiondeclaration: functionheader block

   17 functionheader: type functiondeclarator
   18               | VOID functiondeclarator

   19 functiondeclarator: identifier '(' formalparameterlist ')'
   20                   | identifier '(' ')'

   21 formalparameterlist: formalparameter
   22                    | formalparameterlist ',' formalparameter

   23 formalparameter: type identifier

   24 mainfunctiondeclaration: mainfunctiondeclarator block

   25 mainfunctiondeclarator: identifier '(' ')'

   26 block: '{' blockstatements '}'
   27      | '{' '}'

   28 blockstatements: blockstatement
   29                | blockstatements blockstatement

   30 blockstatement: variabledeclaration
   31               | statement

   32 statement: block
   33          | ';'
   34          | statementexpression ';'
   35          | BREAK ';'
   36          | RETURN expression ';'
   37          | RETURN ';'
   38          | IF '(' expression ')' statement
   39          | IF '(' expression ')' statement ELSE statement
   40          | WHILE '(' expression ')' statement

   41 statementexpression: assignment
   42                    | functioninvocation

   43 primary: literal
   44        | '(' expression ')'
   45        | functioninvocation

   46 argumentlist: expression
   47             | argumentlist ',' expression

   48 functioninvocation: identifier '(' argumentlist ')'
   49                   | identifier '(' ')'

   50 postfixexpression: primary
   51                  | identifier

   52 unaryexpression: '-' unaryexpression
   53                | '!' unaryexpression
   54                | postfixexpression

   55 multiplicativeexpression: unaryexpression
   56                         | multiplicativeexpression '*' unaryexpression
   57                         | multiplicativeexpression '/' unaryexpression
   58                         | multiplicativeexpression '%' unaryexpression

   59 additiveexpression: multiplicativeexpression
   60                   | additiveexpression '+' multiplicativeexpression
   61                   | additiveexpression '-' multiplicativeexpression

   62 relationalexpression: additiveexpression
   63                     | relationalexpression '<' additiveexpression
   64                     | relationalexpression '>' additiveexpression
   65                     | relationalexpression LE additiveexpression
   66                     | relationalexpression GE additiveexpression

   67 equalityexpression: relationalexpression
   68                   | equalityexpression EQ relationalexpression
   69                   | equalityexpression NE relationalexpression

   70 conditionalandexpression: equalityexpression
   71                         | conditionalandexpression AND equalityexpression

   72 conditionalorexpression: conditionalandexpression
   73                        | conditionalorexpression OR conditionalandexpression

   74 assignmentexpression: conditionalorexpression
   75                     | assignment

   76 assignment: identifier '=' assignmentexpression

   77 expression: assignmentexpression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 53
    '%' (37) 58
    '(' (40) 19 20 25 38 39 40 44 48 49
    ')' (41) 19 20 25 38 39 40 44 48 49
    '*' (42) 56
    '+' (43) 60
    ',' (44) 22 47
    '-' (45) 52 61
    '/' (47) 57
    ';' (59) 14 33 34 35 36 37
    '<' (60) 63
    '=' (61) 76
    '>' (62) 64
    '{' (123) 26 27
    '}' (125) 26 27
    error (256)
    NUMBER (258) 3
    STRING_Y (259) 4
    TRUE (260) 5
    FALSE (261) 6
    BOOLEAN (262) 7
    INT (263) 8
    ID (264) 15
    VOID (265) 18
    BREAK (266) 35
    RETURN (267) 36 37
    IF (268) 38 39
    ELSE (269) 39
    WHILE (270) 40
    LE (271) 65
    GE (272) 66
    NE (273) 69
    EQ (274) 68
    AND (275) 71
    OR (276) 73


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    start (38)
        on left: 1 2
        on right: 0
    literal (39)
        on left: 3 4 5 6
        on right: 43
    type (40)
        on left: 7 8
        on right: 14 17 23
    globaldeclarations (41)
        on left: 9 10
        on right: 2 10
    globaldeclaration (42)
        on left: 11 12 13
        on right: 9 10
    variabledeclaration (43)
        on left: 14
        on right: 11 30
    identifier (44)
        on left: 15
        on right: 14 19 20 23 25 48 49 51 76
    functiondeclaration (45)
        on left: 16
        on right: 12
    functionheader (46)
        on left: 17 18
        on right: 16
    functiondeclarator (47)
        on left: 19 20
        on right: 17 18
    formalparameterlist (48)
        on left: 21 22
        on right: 19 22
    formalparameter (49)
        on left: 23
        on right: 21 22
    mainfunctiondeclaration (50)
        on left: 24
        on right: 13
    mainfunctiondeclarator (51)
        on left: 25
        on right: 24
    block (52)
        on left: 26 27
        on right: 16 24 32
    blockstatements (53)
        on left: 28 29
        on right: 26 29
    blockstatement (54)
        on left: 30 31
        on right: 28 29
    statement (55)
        on left: 32 33 34 35 36 37 38 39 40
        on right: 31 38 39 40
    statementexpression (56)
        on left: 41 42
        on right: 34
    primary (57)
        on left: 43 44 45
        on right: 50
    argumentlist (58)
        on left: 46 47
        on right: 47 48
    functioninvocation (59)
        on left: 48 49
        on right: 42 45
    postfixexpression (60)
        on left: 50 51
        on right: 54
    unaryexpression (61)
        on left: 52 53 54
        on right: 52 53 55 56 57 58
    multiplicativeexpression (62)
        on left: 55 56 57 58
        on right: 56 57 58 59 60 61
    additiveexpression (63)
        on left: 59 60 61
        on right: 60 61 62 63 64 65 66
    relationalexpression (64)
        on left: 62 63 64 65 66
        on right: 63 64 65 66 67 68 69
    equalityexpression (65)
        on left: 67 68 69
        on right: 68 69 70 71
    conditionalandexpression (66)
        on left: 70 71
        on right: 71 72 73
    conditionalorexpression (67)
        on left: 72 73
        on right: 73 74
    assignmentexpression (68)
        on left: 74 75
        on right: 76 77
    assignment (69)
        on left: 76
        on right: 41 75
    expression (70)
        on left: 77
        on right: 36 38 39 40 44 46 47


State 0

    0 $accept: . start $end

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    VOID     shift, and go to state 4

    $default  reduce using rule 1 (start)

    start                    go to state 5
    type                     go to state 6
    globaldeclarations       go to state 7
    globaldeclaration        go to state 8
    variabledeclaration      go to state 9
    identifier               go to state 10
    functiondeclaration      go to state 11
    functionheader           go to state 12
    mainfunctiondeclaration  go to state 13
    mainfunctiondeclarator   go to state 14


State 1

    7 type: BOOLEAN .

    $default  reduce using rule 7 (type)


State 2

    8 type: INT .

    $default  reduce using rule 8 (type)


State 3

   15 identifier: ID .

    $default  reduce using rule 15 (identifier)


State 4

   18 functionheader: VOID . functiondeclarator

    ID  shift, and go to state 3

    identifier          go to state 15
    functiondeclarator  go to state 16


State 5

    0 $accept: start . $end

    $end  shift, and go to state 17


State 6

   14 variabledeclaration: type . identifier ';'
   17 functionheader: type . functiondeclarator

    ID  shift, and go to state 3

    identifier          go to state 18
    functiondeclarator  go to state 19


State 7

    2 start: globaldeclarations .
   10 globaldeclarations: globaldeclarations . globaldeclaration

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    VOID     shift, and go to state 4

    $default  reduce using rule 2 (start)

    type                     go to state 6
    globaldeclaration        go to state 20
    variabledeclaration      go to state 9
    identifier               go to state 10
    functiondeclaration      go to state 11
    functionheader           go to state 12
    mainfunctiondeclaration  go to state 13
    mainfunctiondeclarator   go to state 14


State 8

    9 globaldeclarations: globaldeclaration .

    $default  reduce using rule 9 (globaldeclarations)


State 9

   11 globaldeclaration: variabledeclaration .

    $default  reduce using rule 11 (globaldeclaration)


State 10

   25 mainfunctiondeclarator: identifier . '(' ')'

    '('  shift, and go to state 21


State 11

   12 globaldeclaration: functiondeclaration .

    $default  reduce using rule 12 (globaldeclaration)


State 12

   16 functiondeclaration: functionheader . block

    '{'  shift, and go to state 22

    block  go to state 23


State 13

   13 globaldeclaration: mainfunctiondeclaration .

    $default  reduce using rule 13 (globaldeclaration)


State 14

   24 mainfunctiondeclaration: mainfunctiondeclarator . block

    '{'  shift, and go to state 22

    block  go to state 24


State 15

   19 functiondeclarator: identifier . '(' formalparameterlist ')'
   20                   | identifier . '(' ')'

    '('  shift, and go to state 25


State 16

   18 functionheader: VOID functiondeclarator .

    $default  reduce using rule 18 (functionheader)


State 17

    0 $accept: start $end .

    $default  accept


State 18

   14 variabledeclaration: type identifier . ';'
   19 functiondeclarator: identifier . '(' formalparameterlist ')'
   20                   | identifier . '(' ')'

    ';'  shift, and go to state 26
    '('  shift, and go to state 25


State 19

   17 functionheader: type functiondeclarator .

    $default  reduce using rule 17 (functionheader)


State 20

   10 globaldeclarations: globaldeclarations globaldeclaration .

    $default  reduce using rule 10 (globaldeclarations)


State 21

   25 mainfunctiondeclarator: identifier '(' . ')'

    ')'  shift, and go to state 27


State 22

   26 block: '{' . blockstatements '}'
   27      | '{' . '}'

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    BREAK    shift, and go to state 28
    RETURN   shift, and go to state 29
    IF       shift, and go to state 30
    WHILE    shift, and go to state 31
    ';'      shift, and go to state 32
    '{'      shift, and go to state 22
    '}'      shift, and go to state 33

    type                 go to state 34
    variabledeclaration  go to state 35
    identifier           go to state 36
    block                go to state 37
    blockstatements      go to state 38
    blockstatement       go to state 39
    statement            go to state 40
    statementexpression  go to state 41
    functioninvocation   go to state 42
    assignment           go to state 43


State 23

   16 functiondeclaration: functionheader block .

    $default  reduce using rule 16 (functiondeclaration)


State 24

   24 mainfunctiondeclaration: mainfunctiondeclarator block .

    $default  reduce using rule 24 (mainfunctiondeclaration)


State 25

   19 functiondeclarator: identifier '(' . formalparameterlist ')'
   20                   | identifier '(' . ')'

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ')'      shift, and go to state 44

    type                 go to state 45
    formalparameterlist  go to state 46
    formalparameter      go to state 47


State 26

   14 variabledeclaration: type identifier ';' .

    $default  reduce using rule 14 (variabledeclaration)


State 27

   25 mainfunctiondeclarator: identifier '(' ')' .

    $default  reduce using rule 25 (mainfunctiondeclarator)


State 28

   35 statement: BREAK . ';'

    ';'  shift, and go to state 48


State 29

   36 statement: RETURN . expression ';'
   37          | RETURN . ';'

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    ';'       shift, and go to state 53
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 58
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 67
    conditionalorexpression   go to state 68
    assignmentexpression      go to state 69
    assignment                go to state 70
    expression                go to state 71


State 30

   38 statement: IF . '(' expression ')' statement
   39          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 72


State 31

   40 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 73


State 32

   33 statement: ';' .

    $default  reduce using rule 33 (statement)


State 33

   27 block: '{' '}' .

    $default  reduce using rule 27 (block)


State 34

   14 variabledeclaration: type . identifier ';'

    ID  shift, and go to state 3

    identifier  go to state 74


State 35

   30 blockstatement: variabledeclaration .

    $default  reduce using rule 30 (blockstatement)


State 36

   48 functioninvocation: identifier . '(' argumentlist ')'
   49                   | identifier . '(' ')'
   76 assignment: identifier . '=' assignmentexpression

    '('  shift, and go to state 75
    '='  shift, and go to state 76


State 37

   32 statement: block .

    $default  reduce using rule 32 (statement)


State 38

   26 block: '{' blockstatements . '}'
   29 blockstatements: blockstatements . blockstatement

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    BREAK    shift, and go to state 28
    RETURN   shift, and go to state 29
    IF       shift, and go to state 30
    WHILE    shift, and go to state 31
    ';'      shift, and go to state 32
    '{'      shift, and go to state 22
    '}'      shift, and go to state 77

    type                 go to state 34
    variabledeclaration  go to state 35
    identifier           go to state 36
    block                go to state 37
    blockstatement       go to state 78
    statement            go to state 40
    statementexpression  go to state 41
    functioninvocation   go to state 42
    assignment           go to state 43


State 39

   28 blockstatements: blockstatement .

    $default  reduce using rule 28 (blockstatements)


State 40

   31 blockstatement: statement .

    $default  reduce using rule 31 (blockstatement)


State 41

   34 statement: statementexpression . ';'

    ';'  shift, and go to state 79


State 42

   42 statementexpression: functioninvocation .

    $default  reduce using rule 42 (statementexpression)


State 43

   41 statementexpression: assignment .

    $default  reduce using rule 41 (statementexpression)


State 44

   20 functiondeclarator: identifier '(' ')' .

    $default  reduce using rule 20 (functiondeclarator)


State 45

   23 formalparameter: type . identifier

    ID  shift, and go to state 3

    identifier  go to state 80


State 46

   19 functiondeclarator: identifier '(' formalparameterlist . ')'
   22 formalparameterlist: formalparameterlist . ',' formalparameter

    ')'  shift, and go to state 81
    ','  shift, and go to state 82


State 47

   21 formalparameterlist: formalparameter .

    $default  reduce using rule 21 (formalparameterlist)


State 48

   35 statement: BREAK ';' .

    $default  reduce using rule 35 (statement)


State 49

    3 literal: NUMBER .

    $default  reduce using rule 3 (literal)


State 50

    4 literal: STRING_Y .

    $default  reduce using rule 4 (literal)


State 51

    5 literal: TRUE .

    $default  reduce using rule 5 (literal)


State 52

    6 literal: FALSE .

    $default  reduce using rule 6 (literal)


State 53

   37 statement: RETURN ';' .

    $default  reduce using rule 37 (statement)


State 54

   44 primary: '(' . expression ')'

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 58
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 67
    conditionalorexpression   go to state 68
    assignmentexpression      go to state 69
    assignment                go to state 70
    expression                go to state 83


State 55

   52 unaryexpression: '-' . unaryexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal             go to state 57
    identifier          go to state 84
    primary             go to state 59
    functioninvocation  go to state 60
    postfixexpression   go to state 61
    unaryexpression     go to state 85


State 56

   53 unaryexpression: '!' . unaryexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal             go to state 57
    identifier          go to state 84
    primary             go to state 59
    functioninvocation  go to state 60
    postfixexpression   go to state 61
    unaryexpression     go to state 86


State 57

   43 primary: literal .

    $default  reduce using rule 43 (primary)


State 58

   48 functioninvocation: identifier . '(' argumentlist ')'
   49                   | identifier . '(' ')'
   51 postfixexpression: identifier .
   76 assignment: identifier . '=' assignmentexpression

    '('  shift, and go to state 75
    '='  shift, and go to state 76

    $default  reduce using rule 51 (postfixexpression)


State 59

   50 postfixexpression: primary .

    $default  reduce using rule 50 (postfixexpression)


State 60

   45 primary: functioninvocation .

    $default  reduce using rule 45 (primary)


State 61

   54 unaryexpression: postfixexpression .

    $default  reduce using rule 54 (unaryexpression)


State 62

   55 multiplicativeexpression: unaryexpression .

    $default  reduce using rule 55 (multiplicativeexpression)


State 63

   56 multiplicativeexpression: multiplicativeexpression . '*' unaryexpression
   57                         | multiplicativeexpression . '/' unaryexpression
   58                         | multiplicativeexpression . '%' unaryexpression
   59 additiveexpression: multiplicativeexpression .

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 59 (additiveexpression)


State 64

   60 additiveexpression: additiveexpression . '+' multiplicativeexpression
   61                   | additiveexpression . '-' multiplicativeexpression
   62 relationalexpression: additiveexpression .

    '-'  shift, and go to state 90
    '+'  shift, and go to state 91

    $default  reduce using rule 62 (relationalexpression)


State 65

   63 relationalexpression: relationalexpression . '<' additiveexpression
   64                     | relationalexpression . '>' additiveexpression
   65                     | relationalexpression . LE additiveexpression
   66                     | relationalexpression . GE additiveexpression
   67 equalityexpression: relationalexpression .

    LE   shift, and go to state 92
    GE   shift, and go to state 93
    '<'  shift, and go to state 94
    '>'  shift, and go to state 95

    $default  reduce using rule 67 (equalityexpression)


State 66

   68 equalityexpression: equalityexpression . EQ relationalexpression
   69                   | equalityexpression . NE relationalexpression
   70 conditionalandexpression: equalityexpression .

    NE  shift, and go to state 96
    EQ  shift, and go to state 97

    $default  reduce using rule 70 (conditionalandexpression)


State 67

   71 conditionalandexpression: conditionalandexpression . AND equalityexpression
   72 conditionalorexpression: conditionalandexpression .

    AND  shift, and go to state 98

    $default  reduce using rule 72 (conditionalorexpression)


State 68

   73 conditionalorexpression: conditionalorexpression . OR conditionalandexpression
   74 assignmentexpression: conditionalorexpression .

    OR  shift, and go to state 99

    $default  reduce using rule 74 (assignmentexpression)


State 69

   77 expression: assignmentexpression .

    $default  reduce using rule 77 (expression)


State 70

   75 assignmentexpression: assignment .

    $default  reduce using rule 75 (assignmentexpression)


State 71

   36 statement: RETURN expression . ';'

    ';'  shift, and go to state 100


State 72

   38 statement: IF '(' . expression ')' statement
   39          | IF '(' . expression ')' statement ELSE statement

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 58
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 67
    conditionalorexpression   go to state 68
    assignmentexpression      go to state 69
    assignment                go to state 70
    expression                go to state 101


State 73

   40 statement: WHILE '(' . expression ')' statement

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 58
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 67
    conditionalorexpression   go to state 68
    assignmentexpression      go to state 69
    assignment                go to state 70
    expression                go to state 102


State 74

   14 variabledeclaration: type identifier . ';'

    ';'  shift, and go to state 26


State 75

   48 functioninvocation: identifier '(' . argumentlist ')'
   49                   | identifier '(' . ')'

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    ')'       shift, and go to state 103
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 58
    primary                   go to state 59
    argumentlist              go to state 104
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 67
    conditionalorexpression   go to state 68
    assignmentexpression      go to state 69
    assignment                go to state 70
    expression                go to state 105


State 76

   76 assignment: identifier '=' . assignmentexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 58
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 67
    conditionalorexpression   go to state 68
    assignmentexpression      go to state 106
    assignment                go to state 70


State 77

   26 block: '{' blockstatements '}' .

    $default  reduce using rule 26 (block)


State 78

   29 blockstatements: blockstatements blockstatement .

    $default  reduce using rule 29 (blockstatements)


State 79

   34 statement: statementexpression ';' .

    $default  reduce using rule 34 (statement)


State 80

   23 formalparameter: type identifier .

    $default  reduce using rule 23 (formalparameter)


State 81

   19 functiondeclarator: identifier '(' formalparameterlist ')' .

    $default  reduce using rule 19 (functiondeclarator)


State 82

   22 formalparameterlist: formalparameterlist ',' . formalparameter

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2

    type             go to state 45
    formalparameter  go to state 107


State 83

   44 primary: '(' expression . ')'

    ')'  shift, and go to state 108


State 84

   48 functioninvocation: identifier . '(' argumentlist ')'
   49                   | identifier . '(' ')'
   51 postfixexpression: identifier .

    '('  shift, and go to state 75

    $default  reduce using rule 51 (postfixexpression)


State 85

   52 unaryexpression: '-' unaryexpression .

    $default  reduce using rule 52 (unaryexpression)


State 86

   53 unaryexpression: '!' unaryexpression .

    $default  reduce using rule 53 (unaryexpression)


State 87

   56 multiplicativeexpression: multiplicativeexpression '*' . unaryexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal             go to state 57
    identifier          go to state 84
    primary             go to state 59
    functioninvocation  go to state 60
    postfixexpression   go to state 61
    unaryexpression     go to state 109


State 88

   57 multiplicativeexpression: multiplicativeexpression '/' . unaryexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal             go to state 57
    identifier          go to state 84
    primary             go to state 59
    functioninvocation  go to state 60
    postfixexpression   go to state 61
    unaryexpression     go to state 110


State 89

   58 multiplicativeexpression: multiplicativeexpression '%' . unaryexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal             go to state 57
    identifier          go to state 84
    primary             go to state 59
    functioninvocation  go to state 60
    postfixexpression   go to state 61
    unaryexpression     go to state 111


State 90

   61 additiveexpression: additiveexpression '-' . multiplicativeexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 112


State 91

   60 additiveexpression: additiveexpression '+' . multiplicativeexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 113


State 92

   65 relationalexpression: relationalexpression LE . additiveexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 114


State 93

   66 relationalexpression: relationalexpression GE . additiveexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 115


State 94

   63 relationalexpression: relationalexpression '<' . additiveexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 116


State 95

   64 relationalexpression: relationalexpression '>' . additiveexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 117


State 96

   69 equalityexpression: equalityexpression NE . relationalexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 118


State 97

   68 equalityexpression: equalityexpression EQ . relationalexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 119


State 98

   71 conditionalandexpression: conditionalandexpression AND . equalityexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 120


State 99

   73 conditionalorexpression: conditionalorexpression OR . conditionalandexpression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 84
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 121


State 100

   36 statement: RETURN expression ';' .

    $default  reduce using rule 36 (statement)


State 101

   38 statement: IF '(' expression . ')' statement
   39          | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 122


State 102

   40 statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 123


State 103

   49 functioninvocation: identifier '(' ')' .

    $default  reduce using rule 49 (functioninvocation)


State 104

   47 argumentlist: argumentlist . ',' expression
   48 functioninvocation: identifier '(' argumentlist . ')'

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


State 105

   46 argumentlist: expression .

    $default  reduce using rule 46 (argumentlist)


State 106

   76 assignment: identifier '=' assignmentexpression .

    $default  reduce using rule 76 (assignment)


State 107

   22 formalparameterlist: formalparameterlist ',' formalparameter .

    $default  reduce using rule 22 (formalparameterlist)


State 108

   44 primary: '(' expression ')' .

    $default  reduce using rule 44 (primary)


State 109

   56 multiplicativeexpression: multiplicativeexpression '*' unaryexpression .

    $default  reduce using rule 56 (multiplicativeexpression)


State 110

   57 multiplicativeexpression: multiplicativeexpression '/' unaryexpression .

    $default  reduce using rule 57 (multiplicativeexpression)


State 111

   58 multiplicativeexpression: multiplicativeexpression '%' unaryexpression .

    $default  reduce using rule 58 (multiplicativeexpression)


State 112

   56 multiplicativeexpression: multiplicativeexpression . '*' unaryexpression
   57                         | multiplicativeexpression . '/' unaryexpression
   58                         | multiplicativeexpression . '%' unaryexpression
   61 additiveexpression: additiveexpression '-' multiplicativeexpression .

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 61 (additiveexpression)


State 113

   56 multiplicativeexpression: multiplicativeexpression . '*' unaryexpression
   57                         | multiplicativeexpression . '/' unaryexpression
   58                         | multiplicativeexpression . '%' unaryexpression
   60 additiveexpression: additiveexpression '+' multiplicativeexpression .

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 60 (additiveexpression)


State 114

   60 additiveexpression: additiveexpression . '+' multiplicativeexpression
   61                   | additiveexpression . '-' multiplicativeexpression
   65 relationalexpression: relationalexpression LE additiveexpression .

    '-'  shift, and go to state 90
    '+'  shift, and go to state 91

    $default  reduce using rule 65 (relationalexpression)


State 115

   60 additiveexpression: additiveexpression . '+' multiplicativeexpression
   61                   | additiveexpression . '-' multiplicativeexpression
   66 relationalexpression: relationalexpression GE additiveexpression .

    '-'  shift, and go to state 90
    '+'  shift, and go to state 91

    $default  reduce using rule 66 (relationalexpression)


State 116

   60 additiveexpression: additiveexpression . '+' multiplicativeexpression
   61                   | additiveexpression . '-' multiplicativeexpression
   63 relationalexpression: relationalexpression '<' additiveexpression .

    '-'  shift, and go to state 90
    '+'  shift, and go to state 91

    $default  reduce using rule 63 (relationalexpression)


State 117

   60 additiveexpression: additiveexpression . '+' multiplicativeexpression
   61                   | additiveexpression . '-' multiplicativeexpression
   64 relationalexpression: relationalexpression '>' additiveexpression .

    '-'  shift, and go to state 90
    '+'  shift, and go to state 91

    $default  reduce using rule 64 (relationalexpression)


State 118

   63 relationalexpression: relationalexpression . '<' additiveexpression
   64                     | relationalexpression . '>' additiveexpression
   65                     | relationalexpression . LE additiveexpression
   66                     | relationalexpression . GE additiveexpression
   69 equalityexpression: equalityexpression NE relationalexpression .

    LE   shift, and go to state 92
    GE   shift, and go to state 93
    '<'  shift, and go to state 94
    '>'  shift, and go to state 95

    $default  reduce using rule 69 (equalityexpression)


State 119

   63 relationalexpression: relationalexpression . '<' additiveexpression
   64                     | relationalexpression . '>' additiveexpression
   65                     | relationalexpression . LE additiveexpression
   66                     | relationalexpression . GE additiveexpression
   68 equalityexpression: equalityexpression EQ relationalexpression .

    LE   shift, and go to state 92
    GE   shift, and go to state 93
    '<'  shift, and go to state 94
    '>'  shift, and go to state 95

    $default  reduce using rule 68 (equalityexpression)


State 120

   68 equalityexpression: equalityexpression . EQ relationalexpression
   69                   | equalityexpression . NE relationalexpression
   71 conditionalandexpression: conditionalandexpression AND equalityexpression .

    NE  shift, and go to state 96
    EQ  shift, and go to state 97

    $default  reduce using rule 71 (conditionalandexpression)


State 121

   71 conditionalandexpression: conditionalandexpression . AND equalityexpression
   73 conditionalorexpression: conditionalorexpression OR conditionalandexpression .

    AND  shift, and go to state 98

    $default  reduce using rule 73 (conditionalorexpression)


State 122

   38 statement: IF '(' expression ')' . statement
   39          | IF '(' expression ')' . statement ELSE statement

    ID      shift, and go to state 3
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    ';'     shift, and go to state 32
    '{'     shift, and go to state 22

    identifier           go to state 36
    block                go to state 37
    statement            go to state 126
    statementexpression  go to state 41
    functioninvocation   go to state 42
    assignment           go to state 43


State 123

   40 statement: WHILE '(' expression ')' . statement

    ID      shift, and go to state 3
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    ';'     shift, and go to state 32
    '{'     shift, and go to state 22

    identifier           go to state 36
    block                go to state 37
    statement            go to state 127
    statementexpression  go to state 41
    functioninvocation   go to state 42
    assignment           go to state 43


State 124

   48 functioninvocation: identifier '(' argumentlist ')' .

    $default  reduce using rule 48 (functioninvocation)


State 125

   47 argumentlist: argumentlist ',' . expression

    NUMBER    shift, and go to state 49
    STRING_Y  shift, and go to state 50
    TRUE      shift, and go to state 51
    FALSE     shift, and go to state 52
    ID        shift, and go to state 3
    '('       shift, and go to state 54
    '-'       shift, and go to state 55
    '!'       shift, and go to state 56

    literal                   go to state 57
    identifier                go to state 58
    primary                   go to state 59
    functioninvocation        go to state 60
    postfixexpression         go to state 61
    unaryexpression           go to state 62
    multiplicativeexpression  go to state 63
    additiveexpression        go to state 64
    relationalexpression      go to state 65
    equalityexpression        go to state 66
    conditionalandexpression  go to state 67
    conditionalorexpression   go to state 68
    assignmentexpression      go to state 69
    assignment                go to state 70
    expression                go to state 128


State 126

   38 statement: IF '(' expression ')' statement .
   39          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 129

    ELSE      [reduce using rule 38 (statement)]
    $default  reduce using rule 38 (statement)


State 127

   40 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 40 (statement)


State 128

   47 argumentlist: argumentlist ',' expression .

    $default  reduce using rule 47 (argumentlist)


State 129

   39 statement: IF '(' expression ')' statement ELSE . statement

    ID      shift, and go to state 3
    BREAK   shift, and go to state 28
    RETURN  shift, and go to state 29
    IF      shift, and go to state 30
    WHILE   shift, and go to state 31
    ';'     shift, and go to state 32
    '{'     shift, and go to state 22

    identifier           go to state 36
    block                go to state 37
    statement            go to state 130
    statementexpression  go to state 41
    functioninvocation   go to state 42
    assignment           go to state 43


State 130

   39 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 39 (statement)
