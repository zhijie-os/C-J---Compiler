State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: dummy_start $end

    1 dummy_start: start

    2 start: ε
    3      | globaldeclarations

    4 literal: NUMBER
    5        | STRING_Y
    6        | TRUE
    7        | FALSE

    8 type: BOOLEAN
    9     | INT

   10 globaldeclarations: globaldeclaration
   11                   | globaldeclarations globaldeclaration

   12 globaldeclaration: variabledeclaration
   13                  | functiondeclaration
   14                  | mainfunctiondeclaration

   15 variabledeclaration: type identifier ';'

   16 identifier: ID

   17 functiondeclaration: functionheader block

   18 functionheader: type functiondeclarator
   19               | VOID functiondeclarator

   20 functiondeclarator: identifier '(' formalparameterlist ')'
   21                   | identifier '(' ')'

   22 formalparameterlist: formalparameter
   23                    | formalparameterlist ',' formalparameter

   24 formalparameter: type identifier

   25 mainfunctiondeclaration: mainfunctiondeclarator block

   26 mainfunctiondeclarator: identifier '(' ')'

   27 block: '{' blockstatements '}'
   28      | '{' '}'

   29 blockstatements: blockstatement
   30                | blockstatements blockstatement

   31 blockstatement: variabledeclaration
   32               | statement

   33 statement: block
   34          | ';'
   35          | statementexpression ';'
   36          | BREAK ';'
   37          | RETURN expression ';'
   38          | RETURN ';'
   39          | IF '(' expression ')' statement
   40          | IF '(' expression ')' statement ELSE statement
   41          | WHILE '(' expression ')' statement

   42 statementexpression: assignment
   43                    | functioninvocation

   44 primary: literal
   45        | '(' expression ')'
   46        | functioninvocation

   47 argumentlist: expression
   48             | argumentlist ',' expression

   49 functioninvocation: identifier '(' argumentlist ')'
   50                   | identifier '(' ')'

   51 postfixexpression: primary
   52                  | identifier

   53 unaryexpression: '-' unaryexpression
   54                | '!' unaryexpression
   55                | postfixexpression

   56 multiplicativeexpression: unaryexpression
   57                         | multiplicativeexpression '*' unaryexpression
   58                         | multiplicativeexpression '/' unaryexpression
   59                         | multiplicativeexpression '%' unaryexpression

   60 additiveexpression: multiplicativeexpression
   61                   | additiveexpression '+' multiplicativeexpression
   62                   | additiveexpression '-' multiplicativeexpression

   63 relationalexpression: additiveexpression
   64                     | relationalexpression '<' additiveexpression
   65                     | relationalexpression '>' additiveexpression
   66                     | relationalexpression LE additiveexpression
   67                     | relationalexpression GE additiveexpression

   68 equalityexpression: relationalexpression
   69                   | equalityexpression EQ relationalexpression
   70                   | equalityexpression NE relationalexpression

   71 conditionalandexpression: equalityexpression
   72                         | conditionalandexpression AND equalityexpression

   73 conditionalorexpression: conditionalandexpression
   74                        | conditionalorexpression OR conditionalandexpression

   75 assignmentexpression: conditionalorexpression
   76                     | assignment

   77 assignment: identifier '=' assignmentexpression

   78 expression: assignmentexpression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 54
    '%' (37) 59
    '(' (40) 20 21 26 39 40 41 45 49 50
    ')' (41) 20 21 26 39 40 41 45 49 50
    '*' (42) 57
    '+' (43) 61
    ',' (44) 23 48
    '-' (45) 53 62
    '/' (47) 58
    ';' (59) 15 34 35 36 37 38
    '<' (60) 64
    '=' (61) 77
    '>' (62) 65
    '{' (123) 27 28
    '}' (125) 27 28
    error (256)
    NUMBER (258) 4
    STRING_Y (259) 5
    TRUE (260) 6
    FALSE (261) 7
    BOOLEAN (262) 8
    INT (263) 9
    ID (264) 16
    VOID (265) 19
    BREAK (266) 36
    RETURN (267) 37 38
    IF (268) 39 40
    ELSE (269) 40
    WHILE (270) 41
    LE (271) 66
    GE (272) 67
    NE (273) 70
    EQ (274) 69
    AND (275) 72
    OR (276) 74


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    dummy_start (38)
        on left: 1
        on right: 0
    start (39)
        on left: 2 3
        on right: 1
    literal (40)
        on left: 4 5 6 7
        on right: 44
    type (41)
        on left: 8 9
        on right: 15 18 24
    globaldeclarations (42)
        on left: 10 11
        on right: 3 11
    globaldeclaration (43)
        on left: 12 13 14
        on right: 10 11
    variabledeclaration (44)
        on left: 15
        on right: 12 31
    identifier (45)
        on left: 16
        on right: 15 20 21 24 26 49 50 52 77
    functiondeclaration (46)
        on left: 17
        on right: 13
    functionheader (47)
        on left: 18 19
        on right: 17
    functiondeclarator (48)
        on left: 20 21
        on right: 18 19
    formalparameterlist (49)
        on left: 22 23
        on right: 20 23
    formalparameter (50)
        on left: 24
        on right: 22 23
    mainfunctiondeclaration (51)
        on left: 25
        on right: 14
    mainfunctiondeclarator (52)
        on left: 26
        on right: 25
    block (53)
        on left: 27 28
        on right: 17 25 33
    blockstatements (54)
        on left: 29 30
        on right: 27 30
    blockstatement (55)
        on left: 31 32
        on right: 29 30
    statement (56)
        on left: 33 34 35 36 37 38 39 40 41
        on right: 32 39 40 41
    statementexpression (57)
        on left: 42 43
        on right: 35
    primary (58)
        on left: 44 45 46
        on right: 51
    argumentlist (59)
        on left: 47 48
        on right: 48 49
    functioninvocation (60)
        on left: 49 50
        on right: 43 46
    postfixexpression (61)
        on left: 51 52
        on right: 55
    unaryexpression (62)
        on left: 53 54 55
        on right: 53 54 56 57 58 59
    multiplicativeexpression (63)
        on left: 56 57 58 59
        on right: 57 58 59 60 61 62
    additiveexpression (64)
        on left: 60 61 62
        on right: 61 62 63 64 65 66 67
    relationalexpression (65)
        on left: 63 64 65 66 67
        on right: 64 65 66 67 68 69 70
    equalityexpression (66)
        on left: 68 69 70
        on right: 69 70 71 72
    conditionalandexpression (67)
        on left: 71 72
        on right: 72 73 74
    conditionalorexpression (68)
        on left: 73 74
        on right: 74 75
    assignmentexpression (69)
        on left: 75 76
        on right: 77 78
    assignment (70)
        on left: 77
        on right: 42 76
    expression (71)
        on left: 78
        on right: 37 39 40 41 45 47 48


State 0

    0 $accept: • dummy_start $end

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    VOID     shift, and go to state 4

    $default  reduce using rule 2 (start)

    dummy_start              go to state 5
    start                    go to state 6
    type                     go to state 7
    globaldeclarations       go to state 8
    globaldeclaration        go to state 9
    variabledeclaration      go to state 10
    identifier               go to state 11
    functiondeclaration      go to state 12
    functionheader           go to state 13
    mainfunctiondeclaration  go to state 14
    mainfunctiondeclarator   go to state 15


State 1

    8 type: BOOLEAN •

    $default  reduce using rule 8 (type)


State 2

    9 type: INT •

    $default  reduce using rule 9 (type)


State 3

   16 identifier: ID •

    $default  reduce using rule 16 (identifier)


State 4

   19 functionheader: VOID • functiondeclarator

    ID  shift, and go to state 3

    identifier          go to state 16
    functiondeclarator  go to state 17


State 5

    0 $accept: dummy_start • $end

    $end  shift, and go to state 18


State 6

    1 dummy_start: start •

    $default  reduce using rule 1 (dummy_start)


State 7

   15 variabledeclaration: type • identifier ';'
   18 functionheader: type • functiondeclarator

    ID  shift, and go to state 3

    identifier          go to state 19
    functiondeclarator  go to state 20


State 8

    3 start: globaldeclarations •
   11 globaldeclarations: globaldeclarations • globaldeclaration

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    VOID     shift, and go to state 4

    $default  reduce using rule 3 (start)

    type                     go to state 7
    globaldeclaration        go to state 21
    variabledeclaration      go to state 10
    identifier               go to state 11
    functiondeclaration      go to state 12
    functionheader           go to state 13
    mainfunctiondeclaration  go to state 14
    mainfunctiondeclarator   go to state 15


State 9

   10 globaldeclarations: globaldeclaration •

    $default  reduce using rule 10 (globaldeclarations)


State 10

   12 globaldeclaration: variabledeclaration •

    $default  reduce using rule 12 (globaldeclaration)


State 11

   26 mainfunctiondeclarator: identifier • '(' ')'

    '('  shift, and go to state 22


State 12

   13 globaldeclaration: functiondeclaration •

    $default  reduce using rule 13 (globaldeclaration)


State 13

   17 functiondeclaration: functionheader • block

    '{'  shift, and go to state 23

    block  go to state 24


State 14

   14 globaldeclaration: mainfunctiondeclaration •

    $default  reduce using rule 14 (globaldeclaration)


State 15

   25 mainfunctiondeclaration: mainfunctiondeclarator • block

    '{'  shift, and go to state 23

    block  go to state 25


State 16

   20 functiondeclarator: identifier • '(' formalparameterlist ')'
   21                   | identifier • '(' ')'

    '('  shift, and go to state 26


State 17

   19 functionheader: VOID functiondeclarator •

    $default  reduce using rule 19 (functionheader)


State 18

    0 $accept: dummy_start $end •

    $default  accept


State 19

   15 variabledeclaration: type identifier • ';'
   20 functiondeclarator: identifier • '(' formalparameterlist ')'
   21                   | identifier • '(' ')'

    ';'  shift, and go to state 27
    '('  shift, and go to state 26


State 20

   18 functionheader: type functiondeclarator •

    $default  reduce using rule 18 (functionheader)


State 21

   11 globaldeclarations: globaldeclarations globaldeclaration •

    $default  reduce using rule 11 (globaldeclarations)


State 22

   26 mainfunctiondeclarator: identifier '(' • ')'

    ')'  shift, and go to state 28


State 23

   27 block: '{' • blockstatements '}'
   28      | '{' • '}'

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    BREAK    shift, and go to state 29
    RETURN   shift, and go to state 30
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    ';'      shift, and go to state 33
    '{'      shift, and go to state 23
    '}'      shift, and go to state 34

    type                 go to state 35
    variabledeclaration  go to state 36
    identifier           go to state 37
    block                go to state 38
    blockstatements      go to state 39
    blockstatement       go to state 40
    statement            go to state 41
    statementexpression  go to state 42
    functioninvocation   go to state 43
    assignment           go to state 44


State 24

   17 functiondeclaration: functionheader block •

    $default  reduce using rule 17 (functiondeclaration)


State 25

   25 mainfunctiondeclaration: mainfunctiondeclarator block •

    $default  reduce using rule 25 (mainfunctiondeclaration)


State 26

   20 functiondeclarator: identifier '(' • formalparameterlist ')'
   21                   | identifier '(' • ')'

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ')'      shift, and go to state 45

    type                 go to state 46
    formalparameterlist  go to state 47
    formalparameter      go to state 48


State 27

   15 variabledeclaration: type identifier ';' •

    $default  reduce using rule 15 (variabledeclaration)


State 28

   26 mainfunctiondeclarator: identifier '(' ')' •

    $default  reduce using rule 26 (mainfunctiondeclarator)


State 29

   36 statement: BREAK • ';'

    ';'  shift, and go to state 49


State 30

   37 statement: RETURN • expression ';'
   38          | RETURN • ';'

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    ';'       shift, and go to state 54
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 59
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 68
    conditionalorexpression   go to state 69
    assignmentexpression      go to state 70
    assignment                go to state 71
    expression                go to state 72


State 31

   39 statement: IF • '(' expression ')' statement
   40          | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 73


State 32

   41 statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 74


State 33

   34 statement: ';' •

    $default  reduce using rule 34 (statement)


State 34

   28 block: '{' '}' •

    $default  reduce using rule 28 (block)


State 35

   15 variabledeclaration: type • identifier ';'

    ID  shift, and go to state 3

    identifier  go to state 75


State 36

   31 blockstatement: variabledeclaration •

    $default  reduce using rule 31 (blockstatement)


State 37

   49 functioninvocation: identifier • '(' argumentlist ')'
   50                   | identifier • '(' ')'
   77 assignment: identifier • '=' assignmentexpression

    '('  shift, and go to state 76
    '='  shift, and go to state 77


State 38

   33 statement: block •

    $default  reduce using rule 33 (statement)


State 39

   27 block: '{' blockstatements • '}'
   30 blockstatements: blockstatements • blockstatement

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ID       shift, and go to state 3
    BREAK    shift, and go to state 29
    RETURN   shift, and go to state 30
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    ';'      shift, and go to state 33
    '{'      shift, and go to state 23
    '}'      shift, and go to state 78

    type                 go to state 35
    variabledeclaration  go to state 36
    identifier           go to state 37
    block                go to state 38
    blockstatement       go to state 79
    statement            go to state 41
    statementexpression  go to state 42
    functioninvocation   go to state 43
    assignment           go to state 44


State 40

   29 blockstatements: blockstatement •

    $default  reduce using rule 29 (blockstatements)


State 41

   32 blockstatement: statement •

    $default  reduce using rule 32 (blockstatement)


State 42

   35 statement: statementexpression • ';'

    ';'  shift, and go to state 80


State 43

   43 statementexpression: functioninvocation •

    $default  reduce using rule 43 (statementexpression)


State 44

   42 statementexpression: assignment •

    $default  reduce using rule 42 (statementexpression)


State 45

   21 functiondeclarator: identifier '(' ')' •

    $default  reduce using rule 21 (functiondeclarator)


State 46

   24 formalparameter: type • identifier

    ID  shift, and go to state 3

    identifier  go to state 81


State 47

   20 functiondeclarator: identifier '(' formalparameterlist • ')'
   23 formalparameterlist: formalparameterlist • ',' formalparameter

    ')'  shift, and go to state 82
    ','  shift, and go to state 83


State 48

   22 formalparameterlist: formalparameter •

    $default  reduce using rule 22 (formalparameterlist)


State 49

   36 statement: BREAK ';' •

    $default  reduce using rule 36 (statement)


State 50

    4 literal: NUMBER •

    $default  reduce using rule 4 (literal)


State 51

    5 literal: STRING_Y •

    $default  reduce using rule 5 (literal)


State 52

    6 literal: TRUE •

    $default  reduce using rule 6 (literal)


State 53

    7 literal: FALSE •

    $default  reduce using rule 7 (literal)


State 54

   38 statement: RETURN ';' •

    $default  reduce using rule 38 (statement)


State 55

   45 primary: '(' • expression ')'

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 59
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 68
    conditionalorexpression   go to state 69
    assignmentexpression      go to state 70
    assignment                go to state 71
    expression                go to state 84


State 56

   53 unaryexpression: '-' • unaryexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal             go to state 58
    identifier          go to state 85
    primary             go to state 60
    functioninvocation  go to state 61
    postfixexpression   go to state 62
    unaryexpression     go to state 86


State 57

   54 unaryexpression: '!' • unaryexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal             go to state 58
    identifier          go to state 85
    primary             go to state 60
    functioninvocation  go to state 61
    postfixexpression   go to state 62
    unaryexpression     go to state 87


State 58

   44 primary: literal •

    $default  reduce using rule 44 (primary)


State 59

   49 functioninvocation: identifier • '(' argumentlist ')'
   50                   | identifier • '(' ')'
   52 postfixexpression: identifier •
   77 assignment: identifier • '=' assignmentexpression

    '('  shift, and go to state 76
    '='  shift, and go to state 77

    $default  reduce using rule 52 (postfixexpression)


State 60

   51 postfixexpression: primary •

    $default  reduce using rule 51 (postfixexpression)


State 61

   46 primary: functioninvocation •

    $default  reduce using rule 46 (primary)


State 62

   55 unaryexpression: postfixexpression •

    $default  reduce using rule 55 (unaryexpression)


State 63

   56 multiplicativeexpression: unaryexpression •

    $default  reduce using rule 56 (multiplicativeexpression)


State 64

   57 multiplicativeexpression: multiplicativeexpression • '*' unaryexpression
   58                         | multiplicativeexpression • '/' unaryexpression
   59                         | multiplicativeexpression • '%' unaryexpression
   60 additiveexpression: multiplicativeexpression •

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 60 (additiveexpression)


State 65

   61 additiveexpression: additiveexpression • '+' multiplicativeexpression
   62                   | additiveexpression • '-' multiplicativeexpression
   63 relationalexpression: additiveexpression •

    '-'  shift, and go to state 91
    '+'  shift, and go to state 92

    $default  reduce using rule 63 (relationalexpression)


State 66

   64 relationalexpression: relationalexpression • '<' additiveexpression
   65                     | relationalexpression • '>' additiveexpression
   66                     | relationalexpression • LE additiveexpression
   67                     | relationalexpression • GE additiveexpression
   68 equalityexpression: relationalexpression •

    LE   shift, and go to state 93
    GE   shift, and go to state 94
    '<'  shift, and go to state 95
    '>'  shift, and go to state 96

    $default  reduce using rule 68 (equalityexpression)


State 67

   69 equalityexpression: equalityexpression • EQ relationalexpression
   70                   | equalityexpression • NE relationalexpression
   71 conditionalandexpression: equalityexpression •

    NE  shift, and go to state 97
    EQ  shift, and go to state 98

    $default  reduce using rule 71 (conditionalandexpression)


State 68

   72 conditionalandexpression: conditionalandexpression • AND equalityexpression
   73 conditionalorexpression: conditionalandexpression •

    AND  shift, and go to state 99

    $default  reduce using rule 73 (conditionalorexpression)


State 69

   74 conditionalorexpression: conditionalorexpression • OR conditionalandexpression
   75 assignmentexpression: conditionalorexpression •

    OR  shift, and go to state 100

    $default  reduce using rule 75 (assignmentexpression)


State 70

   78 expression: assignmentexpression •

    $default  reduce using rule 78 (expression)


State 71

   76 assignmentexpression: assignment •

    $default  reduce using rule 76 (assignmentexpression)


State 72

   37 statement: RETURN expression • ';'

    ';'  shift, and go to state 101


State 73

   39 statement: IF '(' • expression ')' statement
   40          | IF '(' • expression ')' statement ELSE statement

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 59
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 68
    conditionalorexpression   go to state 69
    assignmentexpression      go to state 70
    assignment                go to state 71
    expression                go to state 102


State 74

   41 statement: WHILE '(' • expression ')' statement

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 59
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 68
    conditionalorexpression   go to state 69
    assignmentexpression      go to state 70
    assignment                go to state 71
    expression                go to state 103


State 75

   15 variabledeclaration: type identifier • ';'

    ';'  shift, and go to state 27


State 76

   49 functioninvocation: identifier '(' • argumentlist ')'
   50                   | identifier '(' • ')'

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    ')'       shift, and go to state 104
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 59
    primary                   go to state 60
    argumentlist              go to state 105
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 68
    conditionalorexpression   go to state 69
    assignmentexpression      go to state 70
    assignment                go to state 71
    expression                go to state 106


State 77

   77 assignment: identifier '=' • assignmentexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 59
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 68
    conditionalorexpression   go to state 69
    assignmentexpression      go to state 107
    assignment                go to state 71


State 78

   27 block: '{' blockstatements '}' •

    $default  reduce using rule 27 (block)


State 79

   30 blockstatements: blockstatements blockstatement •

    $default  reduce using rule 30 (blockstatements)


State 80

   35 statement: statementexpression ';' •

    $default  reduce using rule 35 (statement)


State 81

   24 formalparameter: type identifier •

    $default  reduce using rule 24 (formalparameter)


State 82

   20 functiondeclarator: identifier '(' formalparameterlist ')' •

    $default  reduce using rule 20 (functiondeclarator)


State 83

   23 formalparameterlist: formalparameterlist ',' • formalparameter

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2

    type             go to state 46
    formalparameter  go to state 108


State 84

   45 primary: '(' expression • ')'

    ')'  shift, and go to state 109


State 85

   49 functioninvocation: identifier • '(' argumentlist ')'
   50                   | identifier • '(' ')'
   52 postfixexpression: identifier •

    '('  shift, and go to state 76

    $default  reduce using rule 52 (postfixexpression)


State 86

   53 unaryexpression: '-' unaryexpression •

    $default  reduce using rule 53 (unaryexpression)


State 87

   54 unaryexpression: '!' unaryexpression •

    $default  reduce using rule 54 (unaryexpression)


State 88

   57 multiplicativeexpression: multiplicativeexpression '*' • unaryexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal             go to state 58
    identifier          go to state 85
    primary             go to state 60
    functioninvocation  go to state 61
    postfixexpression   go to state 62
    unaryexpression     go to state 110


State 89

   58 multiplicativeexpression: multiplicativeexpression '/' • unaryexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal             go to state 58
    identifier          go to state 85
    primary             go to state 60
    functioninvocation  go to state 61
    postfixexpression   go to state 62
    unaryexpression     go to state 111


State 90

   59 multiplicativeexpression: multiplicativeexpression '%' • unaryexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal             go to state 58
    identifier          go to state 85
    primary             go to state 60
    functioninvocation  go to state 61
    postfixexpression   go to state 62
    unaryexpression     go to state 112


State 91

   62 additiveexpression: additiveexpression '-' • multiplicativeexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 113


State 92

   61 additiveexpression: additiveexpression '+' • multiplicativeexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 114


State 93

   66 relationalexpression: relationalexpression LE • additiveexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 115


State 94

   67 relationalexpression: relationalexpression GE • additiveexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 116


State 95

   64 relationalexpression: relationalexpression '<' • additiveexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 117


State 96

   65 relationalexpression: relationalexpression '>' • additiveexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 118


State 97

   70 equalityexpression: equalityexpression NE • relationalexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 119


State 98

   69 equalityexpression: equalityexpression EQ • relationalexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 120


State 99

   72 conditionalandexpression: conditionalandexpression AND • equalityexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 121


State 100

   74 conditionalorexpression: conditionalorexpression OR • conditionalandexpression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 85
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 122


State 101

   37 statement: RETURN expression ';' •

    $default  reduce using rule 37 (statement)


State 102

   39 statement: IF '(' expression • ')' statement
   40          | IF '(' expression • ')' statement ELSE statement

    ')'  shift, and go to state 123


State 103

   41 statement: WHILE '(' expression • ')' statement

    ')'  shift, and go to state 124


State 104

   50 functioninvocation: identifier '(' ')' •

    $default  reduce using rule 50 (functioninvocation)


State 105

   48 argumentlist: argumentlist • ',' expression
   49 functioninvocation: identifier '(' argumentlist • ')'

    ')'  shift, and go to state 125
    ','  shift, and go to state 126


State 106

   47 argumentlist: expression •

    $default  reduce using rule 47 (argumentlist)


State 107

   77 assignment: identifier '=' assignmentexpression •

    $default  reduce using rule 77 (assignment)


State 108

   23 formalparameterlist: formalparameterlist ',' formalparameter •

    $default  reduce using rule 23 (formalparameterlist)


State 109

   45 primary: '(' expression ')' •

    $default  reduce using rule 45 (primary)


State 110

   57 multiplicativeexpression: multiplicativeexpression '*' unaryexpression •

    $default  reduce using rule 57 (multiplicativeexpression)


State 111

   58 multiplicativeexpression: multiplicativeexpression '/' unaryexpression •

    $default  reduce using rule 58 (multiplicativeexpression)


State 112

   59 multiplicativeexpression: multiplicativeexpression '%' unaryexpression •

    $default  reduce using rule 59 (multiplicativeexpression)


State 113

   57 multiplicativeexpression: multiplicativeexpression • '*' unaryexpression
   58                         | multiplicativeexpression • '/' unaryexpression
   59                         | multiplicativeexpression • '%' unaryexpression
   62 additiveexpression: additiveexpression '-' multiplicativeexpression •

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 62 (additiveexpression)


State 114

   57 multiplicativeexpression: multiplicativeexpression • '*' unaryexpression
   58                         | multiplicativeexpression • '/' unaryexpression
   59                         | multiplicativeexpression • '%' unaryexpression
   61 additiveexpression: additiveexpression '+' multiplicativeexpression •

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 61 (additiveexpression)


State 115

   61 additiveexpression: additiveexpression • '+' multiplicativeexpression
   62                   | additiveexpression • '-' multiplicativeexpression
   66 relationalexpression: relationalexpression LE additiveexpression •

    '-'  shift, and go to state 91
    '+'  shift, and go to state 92

    $default  reduce using rule 66 (relationalexpression)


State 116

   61 additiveexpression: additiveexpression • '+' multiplicativeexpression
   62                   | additiveexpression • '-' multiplicativeexpression
   67 relationalexpression: relationalexpression GE additiveexpression •

    '-'  shift, and go to state 91
    '+'  shift, and go to state 92

    $default  reduce using rule 67 (relationalexpression)


State 117

   61 additiveexpression: additiveexpression • '+' multiplicativeexpression
   62                   | additiveexpression • '-' multiplicativeexpression
   64 relationalexpression: relationalexpression '<' additiveexpression •

    '-'  shift, and go to state 91
    '+'  shift, and go to state 92

    $default  reduce using rule 64 (relationalexpression)


State 118

   61 additiveexpression: additiveexpression • '+' multiplicativeexpression
   62                   | additiveexpression • '-' multiplicativeexpression
   65 relationalexpression: relationalexpression '>' additiveexpression •

    '-'  shift, and go to state 91
    '+'  shift, and go to state 92

    $default  reduce using rule 65 (relationalexpression)


State 119

   64 relationalexpression: relationalexpression • '<' additiveexpression
   65                     | relationalexpression • '>' additiveexpression
   66                     | relationalexpression • LE additiveexpression
   67                     | relationalexpression • GE additiveexpression
   70 equalityexpression: equalityexpression NE relationalexpression •

    LE   shift, and go to state 93
    GE   shift, and go to state 94
    '<'  shift, and go to state 95
    '>'  shift, and go to state 96

    $default  reduce using rule 70 (equalityexpression)


State 120

   64 relationalexpression: relationalexpression • '<' additiveexpression
   65                     | relationalexpression • '>' additiveexpression
   66                     | relationalexpression • LE additiveexpression
   67                     | relationalexpression • GE additiveexpression
   69 equalityexpression: equalityexpression EQ relationalexpression •

    LE   shift, and go to state 93
    GE   shift, and go to state 94
    '<'  shift, and go to state 95
    '>'  shift, and go to state 96

    $default  reduce using rule 69 (equalityexpression)


State 121

   69 equalityexpression: equalityexpression • EQ relationalexpression
   70                   | equalityexpression • NE relationalexpression
   72 conditionalandexpression: conditionalandexpression AND equalityexpression •

    NE  shift, and go to state 97
    EQ  shift, and go to state 98

    $default  reduce using rule 72 (conditionalandexpression)


State 122

   72 conditionalandexpression: conditionalandexpression • AND equalityexpression
   74 conditionalorexpression: conditionalorexpression OR conditionalandexpression •

    AND  shift, and go to state 99

    $default  reduce using rule 74 (conditionalorexpression)


State 123

   39 statement: IF '(' expression ')' • statement
   40          | IF '(' expression ')' • statement ELSE statement

    ID      shift, and go to state 3
    BREAK   shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ';'     shift, and go to state 33
    '{'     shift, and go to state 23

    identifier           go to state 37
    block                go to state 38
    statement            go to state 127
    statementexpression  go to state 42
    functioninvocation   go to state 43
    assignment           go to state 44


State 124

   41 statement: WHILE '(' expression ')' • statement

    ID      shift, and go to state 3
    BREAK   shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ';'     shift, and go to state 33
    '{'     shift, and go to state 23

    identifier           go to state 37
    block                go to state 38
    statement            go to state 128
    statementexpression  go to state 42
    functioninvocation   go to state 43
    assignment           go to state 44


State 125

   49 functioninvocation: identifier '(' argumentlist ')' •

    $default  reduce using rule 49 (functioninvocation)


State 126

   48 argumentlist: argumentlist ',' • expression

    NUMBER    shift, and go to state 50
    STRING_Y  shift, and go to state 51
    TRUE      shift, and go to state 52
    FALSE     shift, and go to state 53
    ID        shift, and go to state 3
    '('       shift, and go to state 55
    '-'       shift, and go to state 56
    '!'       shift, and go to state 57

    literal                   go to state 58
    identifier                go to state 59
    primary                   go to state 60
    functioninvocation        go to state 61
    postfixexpression         go to state 62
    unaryexpression           go to state 63
    multiplicativeexpression  go to state 64
    additiveexpression        go to state 65
    relationalexpression      go to state 66
    equalityexpression        go to state 67
    conditionalandexpression  go to state 68
    conditionalorexpression   go to state 69
    assignmentexpression      go to state 70
    assignment                go to state 71
    expression                go to state 129


State 127

   39 statement: IF '(' expression ')' statement •
   40          | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 130

    ELSE      [reduce using rule 39 (statement)]
    $default  reduce using rule 39 (statement)


State 128

   41 statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 41 (statement)


State 129

   48 argumentlist: argumentlist ',' expression •

    $default  reduce using rule 48 (argumentlist)


State 130

   40 statement: IF '(' expression ')' statement ELSE • statement

    ID      shift, and go to state 3
    BREAK   shift, and go to state 29
    RETURN  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ';'     shift, and go to state 33
    '{'     shift, and go to state 23

    identifier           go to state 37
    block                go to state 38
    statement            go to state 131
    statementexpression  go to state 42
    functioninvocation   go to state 43
    assignment           go to state 44


State 131

   40 statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 40 (statement)
